//© A+ Computer Science  -  www.apluscompsci.com
//Name -
//Date -
//Class -
//Lab  -

import java.awt.Color;
import java.awt.Graphics;

public class Ball extends Block implements Collidable
{
	private int xSpeed;
	private int ySpeed;

	public Ball()
	{
		super(200,200);
		xSpeed = 3;
		ySpeed = 1;
	}

	//add the other Ball constructors
	
	public Ball(int xPos, int yPos){
		super(xPos, yPos);
		xSpeed = 3; 
		ySpeed = 1;
	}
	
	public Ball(int xPos, int yPos, int width, int height){
		super(xPos, yPos, width, height);
		xSpeed = 3; 
		ySpeed = 1;
	}
	
	public Ball(int xPos, int yPos, int width, int height, Color color){
		super(xPos, yPos, width, height, color);
		xSpeed = 3; 
		ySpeed = 1;
	}
	
	public Ball(int xPos, int yPos, int width, int height, Color color, int xSpeed, int ySpeed){
		super(xPos, yPos, width, height, color);
		this.xSpeed = xSpeed; 
		this.ySpeed = ySpeed;
	}
	 
   //add the set methods
	
	public void setSpeed(int x, int y){
		xSpeed = x;
		ySpeed = y;
	}
	
	public void setColor(Color col){
		super.setColor(col);
	}
	
	public void setXSpeed(int x){
		xSpeed = x;
	}
	
	public void setYSpeed(int y){
		ySpeed = y;
	}
   
	public int getXSpeed(){
		return xSpeed;
	}
   
	public int getYSpeed(){
		   return ySpeed;
	   }

   public void moveAndDraw(Graphics window)
   {
	   draw(window, Color.white); //draw a white ball at old ball location

      setX(getX()+xSpeed);
      setY(getY()+xSpeed); //setY

      draw(window); //draw the ball at its new location
   }
   
   public boolean equals(Object obj)
	{
		Ball other = (Ball)obj;
		if (other.getXSpeed() == getXSpeed() && other.getYSpeed() == getYSpeed()){
			return super.equals(other);
		}

		return false;
	}   

   //add the get methods

	public String toString() { //add a toString() method
		return super.toString() + " " + xSpeed + " " + ySpeed;
	}
	
	@Override
	public boolean didCollideLeft(Object obj) {
		// TODO Auto-generated method stub
		Paddle paddle = (Paddle)obj;
		if (getX()<=paddle.getX()+paddle.getWidth()&&getX()>paddle.getX()&&(getY()>=paddle.getY() && getY()<=paddle.getY()+paddle.getHeight())){
			return true;
		}
		return false;
	}

	@Override
	public boolean didCollideRight(Object obj) {
		// TODO Auto-generated method stub
		
		Paddle paddle = (Paddle)obj;
		if (getX()+getWidth()>=paddle.getX()&&getX()<paddle.getX()&&(getY()>=paddle.getY() && getY()<=paddle.getY()+paddle.getHeight())){
			return true;
		}
		return false;
	}

	@Override
	public boolean didCollideTop(Object obj) {
		// TODO Auto-generated method stub
		Paddle paddle = (Paddle)obj;
		if (getY()+getHeight()>=paddle.getY() && getY() < paddle.getY()+paddle.getHeight() && (getX()>=paddle.getX() && getX()+getWidth()<=paddle.getX()+paddle.getWidth())){
		//if ((getY()>=paddle.getY() && getY()<=paddle.getY()+paddle.getHeight())
			//	||getY()>=paddle.getY() && getY()<paddle.getY()+paddle.getHeight()){
			return true;
		}
		return false;
	}

	@Override
	public boolean didCollideBottom(Object obj) {
		// TODO Auto-generated method stub
		Paddle paddle = (Paddle) obj;
		if (getY()+getHeight()>paddle.getY() && getY() <= paddle.getY()+paddle.getHeight() && (getX()>=paddle.getX() && getX()+getWidth()<=paddle.getX()+paddle.getWidth())){
		//if ((getY()>=paddle.getY() && getY()<=paddle.getY()+paddle.getHeight())
				//||getY()+getHeight()>=paddle.getY()&&getY()+getHeight()<paddle.getY()+paddle.getHeight()){
					return true;
							
				}
		return false;
	}
	
}

