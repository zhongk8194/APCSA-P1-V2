//© A+ Computer Science  -  www.apluscompsci.com
//Name -
//Date -
//Class -
//Lab  -

import java.awt.Color;
import java.awt.Graphics;

public class Ball extends Block 
{
	private int xSpeed;
	private int ySpeed;

	public Ball()
	{
		super(200,200);
		xSpeed=5;
		ySpeed=1;
	}

	//add the other Ball constructors
	public Ball(int x, int y){
		super (x,y);
		xSpeed=5;
		ySpeed=1;
	}
	public Ball(int x, int y, int wid, int ht){
		super (x,y,wid,ht);
		xSpeed=5;
		ySpeed=1;
	}
	public Ball(int x, int y, int wid, int ht, Color col){
		super (x,y,wid,ht,col);
		xSpeed=5;
		ySpeed=1;
	}
	public Ball(int x, int y, int wid, int ht, Color col, int xS, int yS){
		super(x,y,wid,ht,col);
		xSpeed=xS;
		ySpeed=yS;
	}
	
   //add the set methods
	
   public void setColor(Color col)
   {
	  super.setColor(col);

   }
	public void setXSpeed(int xS){
		xSpeed=xS;
	}
	public void setYSpeed(int yS){
		ySpeed=yS;
	}
   

   public void moveAndDraw(Graphics window)
   {
   	//draw a white ball at old ball location
	   Color temp = getColor();
	   draw(window, Color.WHITE);
	   setPos(getX()+xSpeed, getY()+ySpeed);
	   draw(window, temp);
      
   }
   
	public boolean equals(Object obj)
	{
		Ball other = (Ball) obj;
		return super.equals(other) && this.getXSpeed() == other.getXSpeed() && this.getYSpeed() == other.getYSpeed();
	}   

   //add the get methods
	

	public int getXSpeed(){
		return xSpeed;
	}
	public int getYSpeed(){
		return ySpeed;
	}

   //add a toString() method
	public String toString(){
		return "x: "+getX()+" y: "+getY()+" width: "+getWidth()+" height: "+getHeight()+" color: "+getColor()+" xSpeed: "+getXSpeed()+" ySpeed:."
				+ " "+getYSpeed();
	}
	
	public boolean didCollideLeftWall(Object obj) {
		Wall other = (Wall) obj;
		return this.getX() <= other.getLeft();
	}
	
	public boolean didCollideRightWall(Object obj) {
		Wall other = (Wall) obj;
		return this.getX() >= other.getRight();
	}
	
	public boolean didCollideTopWall(Object obj) {
		Wall other = (Wall) obj;
		return this.getY() <= other.getTop();
	}

	public boolean didCollideBottomWall(Object obj) {
		Wall other = (Wall) obj;
		return this.getY()+9 /*because the bottom wall is screwed up*/ >= other.getBottom();
	}
	
	public boolean didCollidePaddle(Object obj){
		   Paddle paddle = (Paddle) obj;
		   if(getX()>paddle.getX() && getX() < paddle.getX()+paddle.getWidth()){
				if(getY()>paddle.getY() && getY() < paddle.getY()+paddle.getHeight()){
					return true;
				}
			}
		   return false;
	   }
	   
	   public boolean didCollidePaddleX(Object obj){
		   Paddle paddle = (Paddle) obj;
		   if(getX()-5*getXSpeed()>paddle.getX()+40){
			   return true;
		   }
		   if(getX()-5*getXSpeed()<paddle.getX()){
			   return true;
		   }
		   return false;
	   }
	   
	   public boolean didCollidePaddleY(Object obj){
		   Paddle paddle = (Paddle) obj;
		   if(getY()-5*getYSpeed()>paddle.getY()+40){
			   return true;
		   }
		   if(getY()-5*getYSpeed()<paddle.getY()){
			   return true;
		   }
		   return false;
	   }
	
	/**@Override
	public boolean didCollideLeft(Object obj) {
		// TODO Auto-generated method stub
		Paddle paddle = (Paddle)obj;
		if (getX()<=paddle.getX()+paddle.getWidth()&&getX()>paddle.getX()&&(getY()>=paddle.getY() && getY()<=paddle.getY()+paddle.getHeight())){
			return true;
		}
		return false;
	}
	@Override
	public boolean didCollideRight(Object obj) {
		// TODO Auto-generated method stub
		
		Paddle paddle = (Paddle)obj;
		if (getX()+getWidth()>=paddle.getX()&&getX()<paddle.getX()&&(getY()>=paddle.getY() && getY()<=paddle.getY()+paddle.getHeight())){
			return true;
		}
		return false;
	}
	@Override
	public boolean didCollideTop(Object obj) {
		// TODO Auto-generated method stub
		Paddle paddle = (Paddle)obj;
		if (getY() <= paddle.getY() && getY() <= paddle.getY() + paddle.getHeight() && (getX() >= paddle.getX() && getX() + getWidth() <= paddle.getHeight())) {
		//if (getY()+getHeight()>=paddle.getY() && getY() < paddle.getY()+paddle.getHeight() && (getX()>=paddle.getX() && getX()+getWidth()<=paddle.getX()+paddle.getWidth())){
			return true;
		}
		return false;
	}
	@Override
	public boolean didCollideBottom(Object obj) {
		// TODO Auto-generated method stub
		Paddle paddle = (Paddle) obj;
		if (getY() >= paddle.getY() && getY() <= paddle.getY() + paddle.getHeight() && (getX() >= paddle.getX() && getX() <= paddle.getWidth() + paddle.getX())){
		//if (getY()+getHeight()>paddle.getY() && getY() <= paddle.getY()+paddle.getHeight() && (getX()>=paddle.getX() && getX()+getWidth()<=paddle.getX()+paddle.getWidth())){			
		return true;			
		}
		return false;
	}
	
	
	public boolean didCollideLeftTile(Object obj) {
		Tile tile = (Tile) obj;
		if (getX()<=tile.getX()+tile.getWidth()&&getX()>tile.getX()&&(getY()>=tile.getY() && getY()<=tile.getY()+tile.getHeight())){
			System.out.println("collide left");
			return true;
		}
		return false;
	}
	public boolean didCollideRightTile(Object obj) {
		Tile tile = (Tile) obj;
		if (getX()+getWidth()>=tile.getX()&&getX()<tile.getX()&&(getY()>=tile.getY() && getY()<=tile.getY()+tile.getHeight())){
			System.out.println("collide right");
			return true;
		}
		return false;
	}
	public boolean didCollideTopTile(Object obj) {
		Tile tile = (Tile) obj;
		if (getY() <= tile.getY() && getY() <= tile.getY() + tile.getHeight() && (getX() >= tile.getX() && getX() + getWidth() <= tile.getHeight())) {
		//if (getY()+getHeight()>=tile.getY() && getY() < tile.getY()+tile.getHeight() && (getX()>=tile.getX() && getX()+getWidth()<=tile.getX()+tile.getWidth())){
			System.out.println("collide top");
			return true;
		}
		return false;
	}
	
	public boolean didCollideBottomTile(Object obj) {
		Tile tile = (Tile) obj;
		if (getY() >= tile.getY() && getY() <= tile.getY() + tile.getHeight() && (getX() >= tile.getX() && getX() <= tile.getWidth() + tile.getX())){
		//if (getY()+getHeight()>tile.getY() && getY() <= tile.getY()+tile.getHeight() && (getX()>=tile.getX() && getX()+getWidth()<=tile.getX()+tile.getWidth())){
			System.out.println("collide bottom");
			return true;			
		}
		return false;
	}
	**/
}
